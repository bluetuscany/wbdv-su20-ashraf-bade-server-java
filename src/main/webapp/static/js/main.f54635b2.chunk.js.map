{"version":3,"sources":["services/CourseService.js","components/CourseCardComponent.js","components/CourseGrid.js","components/ModuleListComponent.js","services/ModuleService.js","containers/ModuleListContainer.js","services/WidgetService.js","components/WidgetListComponent.js","components/TopicPillsComponent.js","services/TopicService.js","containers/TopicPillContainer.js","components/LessonTabsComponent.js","services/LessonService.js","containers/LessonTabsContainer.js","components/CourseEditor.js","components/CourseRowComponent.js","components/CourseTable.js","containers/CourseManagerContainer.js","containers/HomePageContainer.js","components/WhiteBoard.js","reducers/ModuleReducer.js","reducers/LessonReducer.js","reducers/TopicReducer.js","reducers/WidgetReducer.js","App.js","serviceWorker.js","index.js"],"names":["course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseCardComponent","state","editing","props","setEditing","setState","update","CourseService","_id","status","updateCourseTitle","newTitle","prevState","title","className","style","width","src","alt","this","to","onChange","event","target","value","backgroundColor","owner","modified","onClick","deleteCourse","React","Component","CourseGrid","courses","map","key","ModuleListComponent","newModuleTitle","editingModule","findModuleForCourse","paddingRight","color","textAlign","paddingBottom","modules","module","id","deleteModule","updateModule","aria-describedby","e","match","params","type","placeholder","createModule","moduleId","newModule","ModuleListContainer","connect","ownProps","console","log","moduleReducer","dispatch","ModuleService","modulesForTheCourse","findAllModules","actualModules","newModuleData","updatedModule","actualNewModule","tid","widget","wid","WidgetListComponent","findWidgetsForTopic","widgets","length","deleteWidget","createWidget","name","widgetReducer","dispatcher","WidgetService","actualNewWidgetFromServer","widgetId","actualWidgetsFromServer","widgetsFromServer","updateWidget","TopicPillsComponent","editingTopic","newTopicTitle","findTopicForLesson","lessonId","prevProps","snapshot","topicId","topics","topic","deleteTopic","updateTopic","createTopic","newTopic","TopicPillContainer","topicReducer","TopicService","topicForLesson","findTopic","LessonTabsComponent","newLessonTitle","editingLesson","findLessonsForModule","lessons","lesson","deleteLesson","updateLesson","createLesson","newLesson","LessonTabsContainer","lessonReducer","LessonService","actualLesson","actualLessons","newLessonData","updatedLesson","CourseEditor","CourseRowComponent","CourseTable","borderColor","CourseManagerContainer","layout","setLayout","history","push","courseToDelete","filter","addCourse","Date","toDateString","theActualNewCourse","actualArrayOfCourses","aria-label","newCourseTitle","HomePageContainer","WhiteBoard","path","exact","component","initialState","action","updatedWidget","reducer","combineReducers","store","createStore","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f54635b2.chunk.js","sourcesContent":["\r\n    const createCourse = (course) =>\r\n        fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/courses\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(course),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n\r\n    const updateCourse = (courseId, course) =>\r\n        fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/courses/\" + courseId, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(course),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n\r\n    const deleteCourse = (courseId) =>\r\n        fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/courses/\" + courseId, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(response => response.json())\r\n\r\n    const findCourseById = (courseId) => {\r\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/courses/\" + courseId)\r\n        .then(response => response)}\r\n\r\n\r\n    const findAllCourses = () =>\r\n        fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/courses\")\r\n            .then(response => response.json())\r\n\r\n    export default {\r\n    createCourse,\r\n    deleteCourse,\r\n    findCourseById,\r\n    findAllCourses,\r\n    updateCourse\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CourseService from '../services/CourseService'\r\n\r\nclass CourseCardComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n\r\n    setEditing = (editing) =>\r\n        this.setState({editing: editing})\r\n\r\n    update = () =>\r\n        CourseService.updateCourse(\r\n            this.state.course._id,\r\n            this.state.course)\r\n            .then(status => this.setEditing(false))\r\n\r\n    updateCourseTitle = (newTitle) =>\r\n        this.setState(prevState => ({\r\n            course: {\r\n                ...prevState.course,\r\n                title: newTitle\r\n            }\r\n        }))\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"card text-white bg-dark\" style={{width: \"18rem\"}}>\r\n\r\n                    <img src=\"https://img.jakpost.net/c/2020/03/14/2020_03_14_89218_1584158212._large.jpg\"\r\n                         className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            !this.state.editing &&\r\n                            <Link to={`/editor/course/${this.state.course._id}`}>\r\n                                <h4>\r\n                                    {this.state.course.title}\r\n                                </h4>\r\n                            </Link>\r\n                        }\r\n                        {\r\n                            this.state.editing &&\r\n                            <input\r\n                                className=\"form-control\"\r\n                                onChange={(event) => this.updateCourseTitle(event.target.value)}\r\n                                value={this.state.course.title}\r\n                                style={{backgroundColor: \"antiquewhite\"}}/>\r\n                        }\r\n                        Owner: {this.state.course.owner}\r\n                        <br/>\r\n                        Last Modified: {this.state.course.modified}\r\n                        <br/>\r\n                        <br/>\r\n\r\n                        {\r\n                            !this.state.editing &&\r\n\r\n                            <button\r\n                                className=\"fa fa-ellipsis-v float-lg-right\"\r\n                                onClick={() => this.setEditing(true)}>\r\n                            </button>\r\n                        }\r\n                        {\r\n                            this.state.editing &&\r\n                            <span>\r\n\r\n              <button className=\"fa fa-check float-lg-right\" onClick={this.update}>\r\n                </button>\r\n\r\n              <button\r\n                  className=\"fa fa-trash float-lg-right\"\r\n                  onClick={\r\n                      () => this.props.deleteCourse(this.props.course)}>\r\n                </button>\r\n            </span>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseCardComponent","import React from \"react\";\r\nimport CourseCardComponent from \"./CourseCardComponent\";\r\n\r\nclass CourseGrid extends React.Component {\r\n    render() {\r\n        return(\r\n\r\n            <div>\r\n            <h3>Recently added courses</h3>\r\n                <br/>\r\n                <div className=\"card-deck\">\r\n                {\r\n                    this.props.courses.map(course =>\r\n                        <CourseCardComponent\r\n                            deleteCourse={this.props.deleteCourse}\r\n                            key={course._id}\r\n                            course={course}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseGrid","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ModuleListComponent extends React.Component {\r\n    state = {\r\n        newModuleTitle: 'some other module',\r\n        editingModule: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.findAllModules()\r\n        this.props.findModuleForCourse(this.props.courseId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingRight: \"15px\"}}>\r\n\r\n\r\n                   <h2 className=\"bg-dark display-2\" style={{color: \"white\", textAlign: \"center\"}}> Module List </h2>\r\n\r\n                <ul className=\"list-group-item bg-dark wbdv-module-list\" style={{paddingBottom: \"30px\", width: \"100%\"}}>\r\n\r\n                    {\r\n                        this.props.modules.map(module =>\r\n                                <li className=\"list-group-item wbdv-module-item wbdv-module-item-title\"\r\n                                    style={{backgroundColor: \"#f5e5de\"}} key={module._id}>\r\n                                    {\r\n                                        this.state.editingModule._id === module._id &&\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <div className=\"input-group-prepend\" id=\"btn3\">\r\n                                                <button className=\"btn btn-outline-danger\"\r\n                                                        onClick={() => this.props.deleteModule(module._id)}>\r\n                                                    Delete\r\n                                                </button>\r\n                                                <button className=\"btn btn-outline-success\" onClick={() => {\r\n                                                    this.props.updateModule(this.state.editingModule._id, this.state.editingModule)\r\n                                                    this.setState({editingModule: {}})\r\n                                                }}>\r\n                                                    Save\r\n                                                </button>\r\n                                            </div>\r\n                                            <input className=\"form-control\" aria-describedby=\"btn3\"\r\n                                                   style={{backgroundColor: \"#f5e5de\"}} onChange={(e) => {\r\n                                                const newTitle = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingModule: {\r\n                                                        ...prevState.editingModule,\r\n                                                        title: newTitle\r\n                                                    }\r\n                                                }))\r\n                                            }}\r\n                                                   value={this.state.editingModule.title}/>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    }\r\n                                    {\r\n                                        this.state.editingModule._id !== module._id &&\r\n                                        <span>\r\n                    <i className=\"fa fa-pencil\" onClick={() => this.setState({editingModule: module})}>\r\n                    </i>\r\n\r\n                    <Link to={`/editor/${this.props.match.params.courseId}/modules/${module._id}`}>\r\n                        <p className=\"lead\"> {module.title} </p>\r\n                    </Link>\r\n\r\n                  </span>\r\n                                    }\r\n\r\n                                </li>\r\n                        )\r\n                    }\r\n\r\n\r\n                    <li className=\"list-group-item\" style={{backgroundColor: \"#f5e5de\"}}>\r\n\r\n                        <div className=\"input-group mb-3\">\r\n                            <input aria-describedby=\"btn2\" type=\"text\" placeholder=\"New Module Title\"\r\n                                   className=\"form-control\" onChange={(event) =>\r\n                                this.setState({\r\n                                    newModuleTitle: event.target.value\r\n                                })}/>\r\n                        </div>\r\n                        <div className=\"input-group-append\">\r\n                            <button id=\"btn2\" className=\"btn btn-outline-dark btn-block\" type=\"button\"\r\n                                    onClick={() => this.props.createModule(\r\n                                        this.props.params.courseId,\r\n                                        {\r\n                                            title: this.state.newModuleTitle\r\n                                        })}>\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModuleListComponent","const findAllModules = () => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/modules\")\r\n        .then(response => response.json())\r\n}\r\n\r\nconst findModuleForCourse = (courseId) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/courses/${courseId}/modules`)\r\n        .then(response => response.json())\r\n\r\n\r\nconst deleteModule = (moduleId) => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/modules/\" + moduleId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateModule = (moduleId, newModule) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/modules/${moduleId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createModule = (courseId, module) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/courses/${courseId}/modules`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findAllModules,\r\n    deleteModule,\r\n    createModule,\r\n    updateModule,\r\n    findModuleForCourse\r\n}","import {connect} from \"react-redux\";\r\nimport ModuleListComponent from \"../components/ModuleListComponent\";\r\nimport ModuleService from \"../services/ModuleService\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    console.log(ownProps)\r\n    console.log(state)\r\n    return {\r\n        modules: state.moduleReducer.modules,\r\n        newModuleTitle: state.moduleReducer.newModuleTitle,\r\n        params: ownProps.params\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        findModuleForCourse: (courseId) => {\r\n            ModuleService.findModuleForCourse(courseId)\r\n                .then(modulesForTheCourse => dispatch({\r\n                    type: 'FIND_MODULES_FOR_COURSE',\r\n                    modules: modulesForTheCourse\r\n                }))\r\n        },\r\n        findAllModules: () => {\r\n            ModuleService.findAllModules()\r\n                .then(actualModules => dispatch({\r\n                    type: 'FIND_ALL_MODULES',\r\n                    modules: actualModules\r\n                }))\r\n        },\r\n        updateModule: (moduleId, newModuleData) => {\r\n            ModuleService.updateModule(moduleId, newModuleData)\r\n                .then(status => dispatch({\r\n                    type: 'UPDATE_MODULE',\r\n                    updatedModule: newModuleData\r\n                }))\r\n        },\r\n        createModule: (courseId, newModule) => {\r\n            ModuleService.createModule(courseId, newModule)\r\n                .then(actualNewModule => dispatch({\r\n                    type: \"ADD_MODULE\",\r\n                    newModule: actualNewModule\r\n                }))\r\n        },\r\n        deleteModule  : (moduleId) => {\r\n            ModuleService.deleteModule(moduleId)\r\n                .then(status => dispatch({\r\n                    type: \"DELETE_MODULE\",\r\n                    moduleId: moduleId\r\n                }))\r\n        }\r\n    }\r\n}\r\n\r\nconst ModuleListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ModuleListComponent)\r\n\r\nexport default ModuleListContainer","const findWidgetsForTopic = (tid) =>\r\n    fetch(`http://localhost:8080/api/topics/${tid}/widgets`)\r\n        .then(response => response.json())\r\n\r\nconst deleteWidget = (wid) =>\r\n    fetch(`http://localhost:8080/api/widgets/${wid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createWidget = (tid, widget) =>\r\n    fetch(`http://localhost:8080/api/topics/${tid}/widgets`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst updateWidget = (wid, widget) =>\r\n    fetch(`http://localhost:8080/api/widgets/${wid}`, {\r\n       method: 'PUT',\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n           'content-type': 'application/json'\r\n        }\r\n}).then(response => response.json())\r\n\r\nexport default {\r\n    createWidget,\r\n    deleteWidget,\r\n    updateWidget,\r\n    findWidgetsForTopic\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport HeadingWidgetComponent from \"./HeadingWidgetComponent\";\r\nimport ParagraphWidgetComponent from \"./ParagraphWidgetComponent\";\r\nimport WidgetService from \"../services/WidgetService\";\r\n\r\nconst topicId = 't1'\r\n\r\nclass WidgetListComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // TODO: read topicId from match.params.topicId, i.e., from the Route\r\n        this.props.findWidgetsForTopic(topicId).then()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>Widget List</h2>\r\n                <ul>\r\n                    {\r\n                        this.props.widgets.length > 0 &&\r\n                        this.props.widgets.map(widget =>\r\n                            <li key={widget.id}>\r\n                                {\r\n                                    widget.type === 'HEADING' &&\r\n                                    <HeadingWidgetComponent widget={widget}/>\r\n                                }\r\n                                {\r\n                                    widget.type === 'PARAGRAPH' &&\r\n                                    <ParagraphWidgetComponent widget={widget}/>\r\n                                }\r\n                                <div>\r\n                                    <button>Edit</button>\r\n                                    <button>Save</button>\r\n                                    <button onClick={() => this.props.deleteWidget(widget.id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                    <button>Move Up</button>\r\n                                    <button>Move Down</button>\r\n                                </div>\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n                <button onClick={() => this.props.createWidget(topicId, {\r\n                    type: 'HEADING', name: 'New Widget'\r\n                })}>\r\n                    Create Widget\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatcher) => ({\r\n    createWidget: (tid, widget) =>\r\n        WidgetService.createWidget(tid, widget)\r\n            .then(actualNewWidgetFromServer =>\r\n                dispatcher({\r\n                    type: \"CREATE_WIDGET\",\r\n                    widget: actualNewWidgetFromServer\r\n                })\r\n            ),\r\n    deleteWidget: (wid) =>\r\n        WidgetService.deleteWidget(wid)\r\n            .then(status =>\r\n                dispatcher({\r\n                    type: \"DELETE_WIDGET\",\r\n                    widgetId: wid\r\n                })),\r\n    findWidgetsForTopic: (tid) =>\r\n        WidgetService.findWidgetsForTopic(tid)\r\n            .then(actualWidgetsFromServer =>\r\n                dispatcher({\r\n                    type: \"FIND_WIDGETS_FOR_TOPIC\",\r\n                    widgetsFromServer: actualWidgetsFromServer\r\n                })),\r\n\r\n    updateWidget: (wid, widget) =>\r\n        WidgetService.updateWidget(wid, widget)\r\n            .then(status =>\r\n            dispatcher({\r\n                type: \"UPDATE_WIDGET\",\r\n                widgetId: wid\r\n            }))\r\n})\r\n\r\nexport default connect(\r\n    stateToPropertyMapper,\r\n    dispatchToPropertyMapper)\r\n(WidgetListComponent)","import React from \"react\";\r\nimport WidgetListComponent from \"./WidgetListComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass TopicPillsComponent extends React.Component {\r\n\r\n    state = {\r\n        editingTopic: {},\r\n        newTopicTitle: 'Topic Example'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.findTopicForLesson(this.props.lessonId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.topicId !== this.props.topicId) {\r\n            this.props.findTopicForLesson(this.props.lessonId)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <ul className=\"list-group list-group-flush\">\r\n\r\n                    {\r\n                        this.props.topics.map(topic =>\r\n\r\n                                <li className=\"list-group-item\" style={{backgroundColor: \"#f5e5de\"}} key={topic._id}>\r\n                                    {\r\n                                        this.state.editingTopic._id === topic._id &&\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <div className=\"input-group-prepend\" id=\"btn3\">\r\n                                                <button className=\"btn btn-outline-danger\"\r\n                                                        onClick={() => this.props.deleteTopic(topic._id)}>\r\n                                                    Delete\r\n                                                </button>\r\n                                                <button className=\"btn btn-outline-success\" onClick={() => {\r\n                                                    this.props.updateTopic(this.state.editingTopic._id, this.state.editingTopic)\r\n                                                    this.setState({editingTopic: {}})\r\n                                                }}>\r\n                                                    Save\r\n                                                </button>\r\n                                            </div>\r\n                                            <input className=\"form-control\" aria-describedby=\"btn3\"\r\n                                                   style={{backgroundColor: \"#f5e5de\"}} onChange={(e) => {\r\n                                                const newTitle = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingTopic: {\r\n                                                        ...prevState.editingTopic,\r\n                                                        title: newTitle\r\n                                                    }\r\n                                                }))\r\n                                            }}\r\n                                                   value={this.state.editingTopic.title}/>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    }\r\n                                    {\r\n                                        this.state.editingTopic._id !== topic._id &&\r\n                                        <span>\r\n                    <i className=\"fa fa-pencil\" onClick={() => this.setState({editingTopic: topic})}>\r\n                    </i>\r\n                                            <Link to={`/topics/${this.props.topicId}/widgets`}>\r\n                        <p className=\"lead\"> {topic.title} </p>\r\n                                            </Link>\r\n                  </span>\r\n                                    }\r\n                                </li>\r\n                        )\r\n\r\n                    }\r\n\r\n                    <li className=\"list-group-item\" style={{backgroundColor: \"#f5e5de\"}}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input aria-describedby=\"btn2\" type=\"text\" placeholder=\"New Topic Title\"\r\n                                   className=\"form-control\" onChange={(event) =>\r\n                                this.setState({\r\n                                    newTopicTitle: event.target.value\r\n                                })}/>\r\n                        </div>\r\n                        <div className=\"input-group-append\">\r\n                            <button id=\"btn2\" className=\"btn btn-outline-dark btn-block\" type=\"button\"\r\n                                    onClick={() => this.props.createTopic(\r\n                                        this.props.lessonId,\r\n                                        {\r\n                                            title: this.state.newTopicTitle\r\n                                        })}>\r\n                                Add Topic\r\n                            </button>\r\n                        </div>\r\n\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <WidgetListComponent/>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopicPillsComponent","const findTopic = (topicId) => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/topics/\" + topicId)\r\n        .then(response => response.json())\r\n}\r\n\r\nconst findTopicForLesson = (lessonId) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/courses/modules/lessons/${lessonId}/topics`)\r\n        .then(response => response.json())\r\n\r\n\r\nconst deleteTopic = (topicId) => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/abade/topics/\" + topicId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateTopic = (topicId, newTopic) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/topics/${topicId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newTopic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createTopic = (lessonId, topic) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/lessons/${lessonId}/topics`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findTopic,\r\n    findTopicForLesson,\r\n    createTopic,\r\n    updateTopic,\r\n    deleteTopic\r\n}","import {connect} from \"react-redux\";\r\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\r\nimport TopicService from \"../services/TopicService\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    return {\r\n        topics: state.topicReducer.topics,\r\n        newTopicTitle: state.topicReducer.newTopicTitle,\r\n        params: ownProps.params\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        findTopicForLesson: (lessonId) => {\r\n            TopicService.findTopicForLesson(lessonId)\r\n                .then(topicForLesson => dispatch({\r\n                    type: 'FIND_TOPIC_FOR_LESSON',\r\n                    topics: topicForLesson\r\n                }))\r\n        },\r\n        findTopic: (topicId) => {\r\n            TopicService.findTopic(topicId)\r\n                .then(topic => dispatch({\r\n                    type: 'FIND_TOPIC',\r\n                    topic: topic\r\n                }))\r\n        },\r\n        updateTopic: (topicId, newTopic) => {\r\n            TopicService.updateTopic(topicId, newTopic)\r\n                .then(status => dispatch({\r\n                    type: 'UPDATE_TOPIC',\r\n                    updatedModule: newTopic\r\n                }))\r\n        },\r\n        createTopic: (lessonId, topic) => {\r\n            TopicService.createTopic(lessonId, topic)\r\n                .then(newTopic => dispatch({\r\n                    type: \"CREATE_TOPIC\",\r\n                    newTopic: newTopic\r\n                }))\r\n        },\r\n        deleteTopic: (topicId) => {\r\n            TopicService.deleteTopic(topicId)\r\n                .then(status => dispatch({\r\n                    type: \"DELETE_TOPIC\",\r\n                    topicId: topicId\r\n                }))\r\n        }\r\n    }\r\n}\r\n\r\nconst TopicPillContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(TopicPillsComponent)\r\n\r\nexport default TopicPillContainer","import React from \"react\";\r\nimport TopicPillContainer from \"../containers/TopicPillContainer\";\r\n\r\nclass LessonTabsComponent extends React.Component {\r\n\r\n    state = {\r\n        newLessonTitle: 'New Lesson',\r\n        editingLesson: {}\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.findLessonsForModule(this.props.moduleId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.moduleId !== this.props.moduleId) {\r\n            this.props.findLessonsForModule(this.props.moduleId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-2 bg-dark\" style={{color: \"white\", textAlign: \"center\"}}>Lesson Cards</h2>\r\n\r\n\r\n                <div className=\"card-columns\">\r\n                    {\r\n                        this.props.lessons.map(lesson =>\r\n                            <div className=\"card\">\r\n\r\n                                <div className=\"card-header bg-dark\" key={lesson._id}>\r\n\r\n\r\n                                    <i className=\"fa fa-2x fa-pencil-square-o float-right\" style={{color: \"white\"}}\r\n                                       onClick={() => this.setState({editingLesson: lesson})}>\r\n                                    </i>\r\n\r\n\r\n                                    {\r\n                                        this.state.editingLesson._id === lesson._id &&\r\n                                        <div className=\"input-group mb-3\">\r\n\r\n                                            <div>\r\n\r\n                                                <i className=\"fa fa-2x fa-trash-o\" style={{color: \"white\"}}\r\n                                                   onClick={() => this.props.deleteLesson(lesson._id)}>\r\n                                                </i>\r\n\r\n                                                <i className=\"fa fa-2x fa-check-circle-o\" style={{color: \"white\"}}\r\n                                                   onClick={() => {\r\n                                                       this.props.updateLesson(this.state.editingLesson._id, this.state.editingLesson)\r\n                                                       this.setState({editingLesson: {}})\r\n                                                   }}>\r\n                                                </i>\r\n\r\n\r\n                                            </div>\r\n                                            <input className=\"form-control\" aria-describedby=\"btn3\"\r\n                                                   style={{backgroundColor: \"#f5e5de\"}} onChange={(e) => {\r\n                                                const newTitle = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingLesson: {\r\n                                                        ...prevState.editingLesson,\r\n                                                        title: newTitle\r\n                                                    }\r\n                                                }))\r\n                                            }}\r\n                                                   value={this.state.editingLesson.title}/>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    }\r\n\r\n                                    {\r\n\r\n\r\n                                        this.state.editingLesson._id !== lesson._id &&\r\n                                            <p className=\"lead\" style={{color: \"white\"}}> {lesson.title} </p>\r\n\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                                <TopicPillContainer\r\n                                    lessonId={this.props.params.lessonId}\r\n                                />\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <i className=\"fa fa-3x fa-plus-square-o\" onClick={() => this.props.createLesson(\r\n                    this.props.params.moduleId,\r\n                    {\r\n                        title: 'New Lesson'\r\n                    })}>\r\n                </i>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default LessonTabs\r\n\r\n// TODO: move mappers, connectors to separate container file like we did for module\r\n\r\nexport default LessonTabsComponent","const findLessonsForModule = (moduleId) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/modules/${moduleId}/lessons`)\r\n        .then(response => response.json())\r\n\r\nconst createLesson = (moduleId, newLesson) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/modules/${moduleId}/lessons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteLesson = (lessonId) => {\r\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/lessons/${lessonId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateLesson = (lessonId, newLesson) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/abade/lessons/${lessonId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\n\r\nexport default {\r\n    findLessonsForModule,\r\n    createLesson,\r\n    deleteLesson,\r\n    updateLesson\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\r\nimport LessonService from \"../services/LessonService\";\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    lessons: state.lessonReducer.lessons\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    createLesson: (moduleId, newLesson) => {\r\n        LessonService.createLesson(moduleId, newLesson)\r\n            .then(actualLesson => dispatch({\r\n                type: 'CREATE_LESSON',\r\n                newLesson\r\n            }))\r\n    },\r\n    findLessonsForModule: (moduleId) => {\r\n        LessonService.findLessonsForModule(moduleId)\r\n            .then(actualLessons => dispatch({\r\n                type: \"FIND_LESSONS_FOR_MODULE\",\r\n                actualLessons\r\n            }))\r\n    },\r\n    deleteLesson: (moduleId, lessonId) => {\r\n        LessonService.deleteLesson(moduleId, lessonId)\r\n            .then(status => dispatch({\r\n                type: \"DELETE_LESSON\",\r\n                lessonId\r\n            }))\r\n    },\r\n\r\n    updateLesson: (moduleId, lessonId, newLessonData) => {\r\n        LessonService.updateLesson(moduleId, lessonId, newLessonData)\r\n            .then(status => dispatch({\r\n                type: \"UPDATE_LESSON\",\r\n                updatedLesson: newLessonData\r\n            }))\r\n    }\r\n})\r\n\r\nconst LessonTabsContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(LessonTabsComponent)\r\n\r\nexport default LessonTabsContainer","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ModuleListContainer from \"../containers/ModuleListContainer\";\r\nimport LessonTabsContainer from \"../containers/LessonTabsContainer\";\r\n\r\n\r\nconst CourseEditor = ({match}) => {\r\n\r\n    return(\r\n        <div>\r\n\r\n            <h1 className=\"display-1 bg-dark\" style={{textAlign: \"center\", color: \"white\"}}>\r\n                <Link to=\"/table/courses\">\r\n                    <i className=\"fa fa-arrow-circle-o-left\" style={{color: \"white\"}}/>\r\n                </Link>\r\n                <br/>\r\n                Course Editor\r\n            </h1>\r\n\r\n            <br/>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <ModuleListContainer {...match}/>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <LessonTabsContainer {...match}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseEditor","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CourseService from '../services/CourseService'\r\nimport CourseEditor from \"./CourseEditor\";\r\n\r\nclass CourseRowComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n\r\n    setEditing = (editing) =>\r\n        this.setState({editing: editing})\r\n\r\n    update = () =>\r\n        CourseService.updateCourse(\r\n            this.state.course._id,\r\n            this.state.course)\r\n            .then(status => this.setEditing(false))\r\n\r\n    updateCourseTitle = (newTitle) =>\r\n        this.setState(prevState => ({\r\n            course: {\r\n                ...prevState.course,\r\n                title: newTitle\r\n            }\r\n        }))\r\n\r\n    render() {\r\n        return (\r\n            <tr className={this.state.editing ? 'table-info' : ''}>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n\r\n                        <Link to={`/editor/${this.state.course._id}`}>\r\n                            {this.state.course.title}\r\n                        </Link>\r\n\r\n                    }\r\n\r\n\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateCourseTitle(event.target.value)}\r\n                            value={this.state.course.title}/>\r\n                    }\r\n\r\n                </td>\r\n                <td>{this.state.course.owner}</td>\r\n                <td>{this.state.course.modified}</td>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <button\r\n                            className=\"btn btn-outline-dark\"\r\n                            onClick={() => this.setEditing(true)}>\r\n                            Edit\r\n                        </button>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <span>\r\n\r\n                        <button className=\"btn btn-success\" onClick={this.update}>\r\n                        Update</button>\r\n\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={\r\n                                () => this.props.deleteCourse(this.props.course)}>\r\n                        Delete</button>\r\n                        </span>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseRowComponent","import React from \"react\";\r\nimport CourseRowComponent from \"../components/CourseRowComponent\";\r\n\r\nclass CourseTable extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover table-bordered\" style={{borderColor: \"white\"}}>\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Owner</th>\r\n                        <th>Last Modified</th>\r\n                        <th>\r\n                            <i className=\"fa fa-sort-alpha-asc\"/>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.props.courses.map(course =>\r\n                            <CourseRowComponent\r\n                                deleteCourse={this.props.deleteCourse}\r\n                                key={course._id}\r\n                                course={course}/>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseTable","import React from \"react\";\r\nimport CourseGrid from \"../components/CourseGrid\"\r\nimport CourseTable from \"../components/CourseTable\";\r\nimport CourseService from \"../services/CourseService\"\r\nimport '../components/WhiteBoard.style.css'\r\n\r\nclass CourseManagerContainer extends React.Component {\r\n\r\n\r\n    state = {\r\n        layout: this.props.match.params.layout,\r\n        courses: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        CourseService.findAllCourses()\r\n            .then(actualArrayOfCourses =>\r\n                this.setState({\r\n                    courses: actualArrayOfCourses\r\n                }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\r\n            this.setState({\r\n                layout: this.props.match.params.layout\r\n            })\r\n        }\r\n    }\r\n\r\n    setLayout = (layout) => {\r\n        this.props.history.push(`/${layout}/courses`)\r\n    }\r\n\r\n    deleteCourse = (courseToDelete) =>\r\n        CourseService.deleteCourse(courseToDelete._id)\r\n            .then(status => this.setState(prevState => ({\r\n                courses: prevState\r\n                    .courses.filter(course => course !== courseToDelete)\r\n            })))\r\n\r\n    addCourse = (title) =>\r\n        CourseService.createCourse({\r\n            title: title,\r\n            owner: 'me',\r\n            modified: (new Date()).toDateString()\r\n        })\r\n            .then(theActualNewCourse =>\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        courses: [\r\n                            ...prevState.courses,\r\n                            theActualNewCourse\r\n                        ]\r\n                    }\r\n                }))\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n\r\n                <h1 className=\"display-1\" style={{textAlign: \"center\"}}>\r\n                    Course Manager\r\n                </h1>\r\n\r\n                <br/>\r\n\r\n                <div id=\"addCourseInput\" className=\"input-group input-group-lg\">\r\n                    <input type=\"text\" className=\"form-control\"\r\n                           aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"\r\n                           onChange={(event) => this.setState({\r\n                               newCourseTitle: event.target.value\r\n                           })}\r\n                           placeholder=\"Course Title\" style={{backgroundColor: \"transparent\"}}/>\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-dark\" type=\"button\" id=\"button-addon2\" onClick={\r\n                            () => this.addCourse(this.state.newCourseTitle)}>\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n\r\n                {\r\n                    this.state.layout === 'table' &&\r\n                    <div>\r\n                        <i className=\"fa fa-th-large float-lg-right\"\r\n                           onClick={() =>\r\n                               this.setLayout('grid')}>\r\n                        </i>\r\n                        <br/>\r\n                        <CourseTable\r\n                            deleteCourse={this.deleteCourse}\r\n                            courses={this.state.courses}/>\r\n                    </div>\r\n\r\n                }\r\n\r\n\r\n                {\r\n                    this.state.layout === 'grid' &&\r\n                    <div>\r\n                        <i className=\"fa fa-bars float-lg-right\"\r\n                           onClick={() =>\r\n                               this.setLayout('table')}>\r\n                        </i>\r\n                        <CourseGrid\r\n                            deleteCourse={this.deleteCourse}\r\n                            courses={this.state.courses}/>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CourseManagerContainer","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nclass HomePageContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <h1 id=\"title\" className=\"display-1\">\r\n                        Welcome to WhiteBoard\r\n                    </h1>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <Link className=\"btn btn-block btn-outline-dark\" to=\"/table/courses\">\r\n                            <h3>Course Manager</h3>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePageContainer;","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport CourseManagerContainer from \"../containers/CourseManagerContainer\";\r\nimport CourseEditor from \"../components/CourseEditor\";\r\nimport HomePageContainer from \"../containers/HomePageContainer\";\r\nimport './WhiteBoard.style.css'\r\n\r\n// handles the routing of the website\r\n// all html/css will apply to every webpage\r\nclass WhiteBoard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <BrowserRouter>\r\n\r\n                <Route\r\n                    path='/'\r\n                    exact={true}\r\n                    component={HomePageContainer}\r\n                />\r\n\r\n                <Route\r\n                    path='/courses'\r\n                    exact={true}\r\n                    component={CourseManagerContainer}/>\r\n\r\n                <Route\r\n                    path='/:layout/courses'\r\n                    exact={true}\r\n                    component={CourseManagerContainer}/>\r\n\r\n                <Route\r\n                    path='/editor'\r\n                    exact={true}\r\n                    component={CourseEditor}/>\r\n\r\n                <Route\r\n                    path={['/editor/:courseId', '/editor/:courseId/modules/:moduleId']}\r\n                    exact={true}\r\n                    component={CourseEditor}/>\r\n\r\n                {/*<Route*/}\r\n                {/*    path='/topics/:topicId/widgets'*/}\r\n                {/*    exact={true}*/}\r\n                {/*    component={WidgetListComponent}/>*/}\r\n\r\n\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={WidgetListComponent}/>*/}\r\n\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WhiteBoard","const initialState = {\r\n    newModuleTitle: 'Some Module',\r\n    modules: []\r\n}\r\n\r\nconst moduleReducer = (state=initialState, event) => {\r\n    switch (event.type) {\r\n\r\n        case \"UPDATE_MODULE\":\r\n            return {\r\n                ...state,\r\n                modules: state.modules.map(\r\n                    module => module._id === event.updatedModule._id ?\r\n                        event.updatedModule : module )\r\n            }\r\n            break\r\n        case \"FIND_MODULES_FOR_COURSE\":\r\n            return {\r\n                ...state,\r\n                modules: event.modules\r\n            }\r\n            break\r\n        case \"FIND_ALL_MODULES\":\r\n            console.log(event.modules)\r\n            return {\r\n                ...state,\r\n                modules: event.modules\r\n            }\r\n            break\r\n        case \"ADD_MODULE\":\r\n            return {\r\n                modules: [\r\n                    ...state.modules,\r\n                    event.newModule\r\n                ]\r\n            }\r\n            break\r\n        case \"DELETE_MODULE\":\r\n            return {\r\n                modules: state.modules.filter(module => module._id !== event.moduleId)\r\n            }\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moduleReducer","const initialState = {\r\n    lessons: []\r\n}\r\n\r\nconst lessonReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case \"UPDATE_LESSON\":\r\n            return {\r\n                lessons: state.lessons.map(\r\n                    lesson => lesson._id === state.updateLesson._id ?\r\n                        state.updateLesson: lesson)\r\n            }\r\n\r\n        case \"DELETE_LESSON\":\r\n            return {\r\n                ...state,\r\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\r\n            }\r\n        case \"FIND_LESSONS_FOR_MODULE\":\r\n            return {\r\n                ...state,\r\n                lessons: action.actualLessons\r\n            }\r\n        case \"CREATE_LESSON\":\r\n            return {\r\n                ...state,\r\n                lessons: [...state.lessons, action.newLesson]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default lessonReducer","const initialState = {\r\n    topics: []\r\n}\r\n\r\nconst topicReducer = (state=initialState, event) => {\r\n\r\n    switch (event.type) {\r\n\r\n        case \"UPDATE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.map(\r\n                    topic => topic._id === event.updateTopic._id ?\r\n                        state.updateTopic : topic)\r\n            }\r\n            break\r\n        case \"FIND_TOPIC_FOR_LESSON\":\r\n            return {\r\n                ...state,\r\n                topics: event.topics\r\n            }\r\n            break\r\n        case \"FIND_TOPIC\":\r\n            console.log(event.topics)\r\n            return {\r\n                ...state,\r\n                topics: event.topics\r\n            }\r\n            break\r\n        case \"CREATE_TOPIC\":\r\n            return {\r\n                topics: [\r\n                    ...state.topics,\r\n                    event.newTopic\r\n                ]\r\n            }\r\n            break\r\n        case \"DELETE_TOPIC\":\r\n            return {\r\n                modules: state.topics.filter(topic => topic._id !== event.topicId)\r\n            }\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicReducer","const initialState = {\r\n    widgets: []\r\n}\r\n\r\nconst widgetReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_WIDGET\":\r\n            return {\r\n                ...state,\r\n                widgets: [...state.widgets, action.widget]\r\n            }\r\n        case \"FIND_WIDGETS_FOR_TOPIC\":\r\n            return {\r\n                ...state,\r\n                widgets: action.widgetsFromServer\r\n            }\r\n\r\n        case \"UPDATE_WIDGET\":\r\n            return {\r\n                ...state,\r\n                modules: state.widgets.map(\r\n                    widget => widget.id === action.updatedWidget.id ?\r\n                        action.updatedWidget : widget )\r\n            }\r\n            break\r\n        case \"DELETE_WIDGET\":\r\n            return {\r\n                ...state,\r\n                widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default widgetReducer","import React from 'react';\n//import './App.css';\nimport WhiteBoard from \"./components/WhiteBoard.js\";\nimport moduleReducer from \"./reducers/ModuleReducer\";\nimport lessonReducer from \"./reducers/LessonReducer\";\nimport topicReducer from \"./reducers/TopicReducer\"\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport widgetReducer from \"./reducers/WidgetReducer\";\n\nconst reducer = combineReducers({\n    moduleReducer, lessonReducer, topicReducer, widgetReducer\n})\n\nconst store = createStore(reducer)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            <WhiteBoard/>\n        </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}